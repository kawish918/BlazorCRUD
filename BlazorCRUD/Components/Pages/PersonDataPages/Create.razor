@page "/persondata/create"

@using Microsoft.EntityFrameworkCore
@using BlazorCRUD.Models
@inject IDbContextFactory<BlazorCRUD.Data.BlazorCRUDContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>


<div class="container mt-4">
    <h1 class="mb-4">Create Person Data</h1>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="PersonData" OnValidSubmit="AddPersonData" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger mb-4" />

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="firstname" class="form-label">First Name:</label>
                        <InputText id="firstname" @bind-Value="PersonData.FirstName" class="form-control" />
                        <ValidationMessage For="() => PersonData.FirstName" class="text-danger" />
                    </div>
                    <div class="col-md-6">
                        <label for="lastname" class="form-label">Last Name:</label>
                        <InputText id="lastname" @bind-Value="PersonData.LastName" class="form-control" />
                        <ValidationMessage For="() => PersonData.LastName" class="text-danger" />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="gender" class="form-label">Gender:</label>
                        <InputSelect id="gender" @bind-Value="PersonData.Gender" class="form-select">
                            <option value="">Select Gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </InputSelect>
                        <ValidationMessage For="() => PersonData.Gender" class="text-danger" />
                    </div>
                    <div class="col-md-6">
                        <label for="birthday" class="form-label">Date of Birth:</label>
                        <InputDate id="birthday" @bind-Value="PersonData.BirthDay" class="form-control" />
                        <ValidationMessage For="() => PersonData.BirthDay" class="text-danger" />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="phone" class="form-label">Phone:</label>
                        <InputText id="phone" @bind-Value="PersonData.Phone" class="form-control" />
                        <ValidationMessage For="() => PersonData.Phone" class="text-danger" />
                    </div>
                    <div class="col-md-6">
                        <label for="street" class="form-label">Street:</label>
                        <InputText id="street" @bind-Value="PersonData.Street" class="form-control" />
                        <ValidationMessage For="() => PersonData.Street" class="text-danger" />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="city" class="form-label">City:</label>
                        <InputText id="city" @bind-Value="PersonData.City" class="form-control" />
                        <ValidationMessage For="() => PersonData.City" class="text-danger" />
                    </div>
                    <div class="col-md-6">
                        <label for="state" class="form-label">State:</label>
                        <InputText id="state" @bind-Value="PersonData.State" class="form-control" />
                        <ValidationMessage For="() => PersonData.State" class="text-danger" />
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="zipcode" class="form-label">Zip Code:</label>
                        <InputText id="zipcode" @bind-Value="PersonData.ZipCode" class="form-control" />
                        <ValidationMessage For="() => PersonData.ZipCode" class="text-danger" />
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Create</button>
            </EditForm>

            <div class="mt-3">
                <a href="/persondata" class="btn btn-secondary">Back to List</a>
            </div>
        </div>
    </div>
</div>
@code {

    [SupplyParameterFromForm]
    public PersonData PersonData { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddPersonData()
    {
        using var context = DbFactory.CreateDbContext();
        context.PersonData.Add(PersonData);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/persondata");
    }
}